#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: RenderSystem_GLES

set( HEADER_FILES 
  include/OgreGLESContext.h
  include/OgreGLESDefaultHardwareBufferManager.h
  include/OgreGLESDepthBuffer.h
  include/OgreGLESFBOMultiRenderTarget.h
  include/OgreGLESFBORenderTexture.h
  include/OgreGLESFrameBufferObject.h
  include/OgreGLESGpuProgramManager.h
  include/OgreGLESHardwareBufferManager.h
  include/OgreGLESHardwareIndexBuffer.h
  include/OgreGLESHardwarePixelBuffer.h
  include/OgreGLESHardwareVertexBuffer.h
  include/OgreGLESPBRenderTexture.h
  include/OgreGLESPBuffer.h
  include/OgreGLESPixelFormat.h
  include/OgreGLESPlugin.h
  include/OgreGLESPrerequisites.h
  include/OgreGLESRenderSystem.h
  include/OgreGLESRenderTexture.h
  include/OgreGLESSupport.h
  include/OgreGLESTexture.h
  include/OgreGLESTextureManager.h
  include/EAGL/OgreEAGLESContext.h
  include/EAGL/OgreEAGLRenderTexture.h
  include/EAGL/OgreEAGLSupport.h
  include/EAGL/OgreEAGLWindow.h
  include/EAGL/OgreGLESUtil.h
  include/EGL/OgreEGLContext.h
  include/EGL/OgreEGLRenderTexture.h
  include/EGL/OgreEGLSupport.h
  include/EGL/OgreEGLWindow.h
  include/EGL/OgreGLESUtil.h
  include/EGL/X11/OgreGLESUtil.h
  include/EGL/X11/OgreX11EGLContext.h
  include/EGL/X11/OgreX11EGLRenderTexture.h
  include/EGL/X11/OgreX11EGLSupport.h
  include/EGL/X11/OgreX11EGLWindow.h
)

set( SOURCE_FILES 
  src/OgreGLESContext.cpp
  src/OgreGLESDefaultHardwareBufferManager.cpp
  src/OgreGLESDepthBuffer.cpp
  src/OgreGLESEngineDll.cpp
  src/OgreGLESFBOMultiRenderTarget.cpp
  src/OgreGLESFBORenderTexture.cpp
  src/OgreGLESFrameBufferObject.cpp
  src/OgreGLESGpuProgramManager.cpp
  src/OgreGLESHardwareBufferManager.cpp
  src/OgreGLESHardwareIndexBuffer.cpp
  src/OgreGLESHardwarePixelBuffer.cpp
  src/OgreGLESHardwareVertexBuffer.cpp
  src/OgreGLESPBRenderTexture.cpp
  src/OgreGLESPixelFormat.cpp
  src/OgreGLESPlugin.cpp
  src/OgreGLESRenderSystem.cpp
  src/OgreGLESRenderTexture.cpp
  src/OgreGLESSupport.cpp
  src/OgreGLESTexture.cpp
  src/OgreGLESTextureManager.cpp
  src/EGL/OgreEGLContext.cpp
  src/EGL/OgreEGLRenderTexture.cpp
  src/EGL/OgreEGLSupport.cpp
  src/EGL/OgreEGLWindow.cpp
  src/EGL/X11/OgreX11EGLContext.cpp
  src/EGL/X11/OgreX11EGLRenderTexture.cpp
  src/EGL/X11/OgreX11EGLSupport.cpp
  src/EGL/X11/OgreX11EGLWindow.cpp
)



if (GTK)
  set( PLATFORM_HEADER_FILES 
    include/EGL/GTK/OgreGLESUtil.h
    include/EGL/GTK/OgreGtkEGLContext.h
    include/EGL/GTK/OgreGtkEGLRenderTexture.h
    include/EGL/GTK/OgreGtkEGLSupport.h
    include/EGL/GTK/OgreGtkEGLWindow.h
  )

  set( PLATFORM_HEADER_INSTALL "GTK" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/EGL/GTK/OgreGtkEGLContext.cpp
    src/EGL/GTK/OgreGtkEGLRenderTexture.cpp
    src/EGL/GTK/OgreGtkEGLSupport.cpp
    src/EGL/GTK/OgreGtkEGLWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "GTK" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SYMBIAN)
  set( PLATFORM_HEADER_FILES 
    include/EGL/Symbian/OgreGLESUtil.h
    include/EGL/Symbian/OgreSymbianEGLContext.h
    include/EGL/Symbian/OgreSymbianEGLRenderTexture.h
    include/EGL/Symbian/OgreSymbianEGLSupport.h
    include/EGL/Symbian/OgreSymbianEGLWindow.h
  )

  set( PLATFORM_HEADER_INSTALL "SYMBIAN" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/EGL/Symbian/OgreSymbianEGLContext.cpp
    src/EGL/Symbian/OgreSymbianEGLRenderTexture.cpp
    src/EGL/Symbian/OgreSymbianEGLSupport.cpp
    src/EGL/Symbian/OgreSymbianEGLWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "SYMBIAN" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    include/EGL/WIN32/OgreGLESUtil.h
    include/EGL/WIN32/OgreWin32EGLContext.h
    include/EGL/WIN32/OgreWin32EGLRenderTexture.h
    include/EGL/WIN32/OgreWin32EGLSupport.h
    include/EGL/WIN32/OgreWin32EGLWindow.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/EGL/WIN32/OgreWin32EGLContext.cpp
    src/EGL/WIN32/OgreWin32EGLRenderTexture.cpp
    src/EGL/WIN32/OgreWin32EGLSupport.cpp
    src/EGL/WIN32/OgreWin32EGLWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )




#******** END OF AUTOGENERATED CONTENT ********



add_library( RenderSystem_GLES ${HEADER_FILES} ${SOURCE_FILES} )
#set_target_properties( RenderSystem_GLES PROPERTIES COMPILE_DEFINITIONS GUCE_GUI_BUILD_MODULE )
add_dependencies( RenderSystem_GLES OgreMain )
target_link_libraries( RenderSystem_GLES OgreMain )
GUCE_config_lib( RenderSystem_GLES )


#******** START OF AUTOGENERATED CONTENT ********



include_directories( ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/DeprecationManager ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/FreeImageToolkit ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/LibJPEG ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/LibMNG ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/LibOpenJPEG ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/LibPNG ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/LibTIFF ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/Metadata ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR/Half ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR/Iex ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR/IlmImf ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR/IlmThread ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/OpenEXR/Imath ../../../../../../GUCEF/trunk/gucefIMAGE/plugins/imgpluginFreeImage/dependencies/FreeImage/Source/ZLib ../../../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zlib ../../../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zziplib ../../../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zziplib/zzip ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src/winfonts ../../OgreMain/include ../../OgreMain/include/Tegra2 ../../OgreMain/src ../../OgreMain/src/nedmalloc include include/EAGL include/EGL include/EGL/X11 )

if ( ANDROID )
  include_directories( ../../OgreMain/include/Android )
endif( ANDROID )

if ( GLX )
  include_directories( ../../OgreMain/include/GLX ../../OgreMain/src/GLX )
endif( GLX )

if ( GTK )
  include_directories( ../../OgreMain/include/gtk ../../OgreMain/src/gtk include/EGL/GTK )
endif( GTK )

if ( IPHONEOS )
  include_directories( ../../OgreMain/include/iPhone )
endif( IPHONEOS )

if ( OSX )
  include_directories( ../../OgreMain/include/OSX )
endif( OSX )

if ( SYMBIAN )
  include_directories( ../../OgreMain/include/Symbian include/EGL/Symbian )
endif( SYMBIAN )

if ( WIN32 )
  include_directories( ../../OgreMain/include/WIN32 ../../OgreMain/src/WIN32 include/EGL/WIN32 )
endif( WIN32 )
