#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: freetype

set( HEADER_FILES 
  include/ft2build.h
  include/freetype/freetype.h
  include/freetype/ftbbox.h
  include/freetype/ftbdf.h
  include/freetype/ftbitmap.h
  include/freetype/ftcache.h
  include/freetype/ftchapters.h
  include/freetype/ftcid.h
  include/freetype/fterrdef.h
  include/freetype/fterrors.h
  include/freetype/ftgasp.h
  include/freetype/ftglyph.h
  include/freetype/ftgxval.h
  include/freetype/ftgzip.h
  include/freetype/ftimage.h
  include/freetype/ftincrem.h
  include/freetype/ftlcdfil.h
  include/freetype/ftlist.h
  include/freetype/ftlzw.h
  include/freetype/ftmm.h
  include/freetype/ftmodapi.h
  include/freetype/ftmoderr.h
  include/freetype/ftotval.h
  include/freetype/ftoutln.h
  include/freetype/ftpfr.h
  include/freetype/ftrender.h
  include/freetype/ftsizes.h
  include/freetype/ftsnames.h
  include/freetype/ftstroke.h
  include/freetype/ftsynth.h
  include/freetype/ftsystem.h
  include/freetype/fttrigon.h
  include/freetype/fttypes.h
  include/freetype/ftwinfnt.h
  include/freetype/ftxf86.h
  include/freetype/t1tables.h
  include/freetype/ttnameid.h
  include/freetype/tttables.h
  include/freetype/tttags.h
  include/freetype/ttunpat.h
  include/freetype/config/ftconfig.h
  include/freetype/config/ftheader.h
  include/freetype/config/ftmodule.h
  include/freetype/config/ftoption.h
  include/freetype/config/ftstdlib.h
  include/freetype/internal/autohint.h
  include/freetype/internal/ftcalc.h
  include/freetype/internal/ftdebug.h
  include/freetype/internal/ftdriver.h
  include/freetype/internal/ftgloadr.h
  include/freetype/internal/ftmemory.h
  include/freetype/internal/ftobjs.h
  include/freetype/internal/ftrfork.h
  include/freetype/internal/ftserv.h
  include/freetype/internal/ftstream.h
  include/freetype/internal/fttrace.h
  include/freetype/internal/ftvalid.h
  include/freetype/internal/internal.h
  include/freetype/internal/pcftypes.h
  include/freetype/internal/psaux.h
  include/freetype/internal/pshints.h
  include/freetype/internal/sfnt.h
  include/freetype/internal/t1types.h
  include/freetype/internal/tttypes.h
  include/freetype/internal/services/svbdf.h
  include/freetype/internal/services/svcid.h
  include/freetype/internal/services/svgldict.h
  include/freetype/internal/services/svgxval.h
  include/freetype/internal/services/svkern.h
  include/freetype/internal/services/svmm.h
  include/freetype/internal/services/svotval.h
  include/freetype/internal/services/svpfr.h
  include/freetype/internal/services/svpostnm.h
  include/freetype/internal/services/svpscmap.h
  include/freetype/internal/services/svpsinfo.h
  include/freetype/internal/services/svsfnt.h
  include/freetype/internal/services/svttcmap.h
  include/freetype/internal/services/svtteng.h
  include/freetype/internal/services/svttglyf.h
  include/freetype/internal/services/svwinfnt.h
  include/freetype/internal/services/svxf86nm.h
  src/winfonts/fnterrs.h
  src/winfonts/winfnt.h
)

set( SOURCE_FILES 
  src/autofit/autofit.c
  src/base/ftbase.c
  src/base/ftsystem.c
  src/base/ftglyph.c
  src/base/ftbitmap.c
  src/base/ftinit.c
  src/bdf/bdf.c
  src/cache/ftcache.c
  src/cff/cff.c
  src/cid/cidriver.c
  src/cid/cidobjs.c
  src/cid/cidgload.c
  src/cid/cidload.c
  src/cid/cidparse.c
  src/gxvalid/gxvalid.c
  src/gzip/ftgzip.c
  src/lzw/ftlzw.c
  src/otvalid/otvalid.c
  src/pcf/pcf.c
  src/pfr/pfr.c
  src/psaux/psaux.c
  src/pshinter/pshinter.c
  src/psnames/psnames.c
  src/raster/raster.c
  src/sfnt/sfnt.c
  src/smooth/ftsmooth.c
  src/smooth/ftgrays.c
  src/truetype/truetype.c
  src/type1/type1.c
  src/type42/type42.c
  src/winfonts/winfnt.c
)



if (ANDROID)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "ANDROID" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GLX)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "GLX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GTK)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "GTK" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (IPHONEOS)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "IPHONEOS" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (OSX)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "OSX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SDL)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SYMBIAN)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "SYMBIAN" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (UNIX)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "UNIX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_SOURCE_FILES 
    src/autofit/autofit.c
    src/base/ftbase.c
    src/base/ftsystem.c
    src/base/ftglyph.c
    src/base/ftbitmap.c
    src/base/ftinit.c
    src/bdf/bdf.c
    src/cache/ftcache.c
    src/cff/cff.c
    src/cid/cidriver.c
    src/cid/cidobjs.c
    src/cid/cidgload.c
    src/cid/cidload.c
    src/cid/cidparse.c
    src/gxvalid/gxvalid.c
    src/gzip/ftgzip.c
    src/lzw/ftlzw.c
    src/otvalid/otvalid.c
    src/pcf/pcf.c
    src/pfr/pfr.c
    src/psaux/psaux.c
    src/pshinter/pshinter.c
    src/psnames/psnames.c
    src/raster/raster.c
    src/sfnt/sfnt.c
    src/smooth/ftsmooth.c
    src/smooth/ftgrays.c
    src/truetype/truetype.c
    src/type1/type1.c
    src/type42/type42.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "freetype" )
add_library( ${MODULE_NAME} ${ALL_FILES} )
set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "FT_DVEDIT_BUILD_DLL;FT_CONFIG_OPTION_SYSTEM_ZLIB;FT_DVEDIT_DLL_API;FT2_BUILD_LIBRARY" )

if ( ANDROID )
  target_link_libraries( ${MODULE_NAME} z )
endif( ANDROID )

if ( LINUX )
  add_dependencies( ${MODULE_NAME} zlib )
  target_link_libraries( ${MODULE_NAME} zlib )
endif( LINUX )

if ( WIN32 )
  add_dependencies( ${MODULE_NAME} zlib )
  target_link_libraries( ${MODULE_NAME} zlib )
endif( WIN32 )

if ( WIN64 )
  add_dependencies( ${MODULE_NAME} zlib )
  target_link_libraries( ${MODULE_NAME} zlib )
endif( WIN64 )

include_directories( include include/freetype include/freetype/config include/freetype/internal include/freetype/internal/services src/winfonts )

if ( LINUX )
  include_directories( ../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zlib )
endif( LINUX )

if ( WIN32 )
  include_directories( ../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zlib )
endif( WIN32 )

if ( WIN64 )
  include_directories( ../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zlib )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GLX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GTK)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (IPHONEOS)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SDL)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SYMBIAN)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (UNIX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


