#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: MyGUI.SkinEditor



if (LINUX)
  set( PLATFORM_HEADER_FILES 
    ActionManager.h
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    Binary.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    EditorState.h
    ExportManager.h
    HorizontalSelectorBlackControl.h
    HorizontalSelectorControl.h
    HotKeyCommand.h
    HotKeyManager.h
    ItemHolder.h
    Localise.h
    MainMenuControl.h
    MainPane.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    PositionSelectorBlackControl.h
    PositionSelectorControl.h
    Property.h
    PropertyAdvisor.h
    PropertyAlignControl.h
    PropertyBoolControl.h
    PropertyColourControl.h
    PropertyControl.h
    PropertyInt2Control.h
    PropertyInt4Control.h
    PropertyIntControl.h
    PropertyRegionTypeControl.h
    PropertySet.h
    PropertyTexturesControl.h
    RecentFilesManager.h
    RegionControl.h
    RegionItem.h
    RegionListControl.h
    RegionPropertyControl.h
    RegionTextureControl.h
    SelectorControl.h
    SeparatorControl.h
    SeparatorItem.h
    SeparatorListControl.h
    SeparatorPropertyControl.h
    SeparatorTextureControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsWindow.h
    SkinControl.h
    SkinItem.h
    SkinListControl.h
    SkinManager.h
    SkinPropertyControl.h
    SkinTextureControl.h
    StateControl.h
    StateController.h
    StateItem.h
    StateListControl.h
    StateManager.h
    StatePropertyControl.h
    StateTextureControl.h
    TestState.h
    TestWindow.h
    TextFieldControl.h
    TextureBrowseCell.h
    TextureBrowseControl.h
    TextureBrowseItemBox.h
    TextureControl.h
    TextureToolControl.h
    VerticalSelectorBlackControl.h
    VerticalSelectorControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
    ../../Common/Input/OIS/InputManager.h
    ../../Common/Input/OIS/PointerManager.h
  )

  set( PLATFORM_HEADER_INSTALL "LINUX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ActionManager.cpp
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    ExportManager.cpp
    HorizontalSelectorBlackControl.cpp
    HorizontalSelectorControl.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPane.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    PositionSelectorBlackControl.cpp
    PositionSelectorControl.cpp
    Property.cpp
    PropertyAlignControl.cpp
    PropertyBoolControl.cpp
    PropertyColourControl.cpp
    PropertyControl.cpp
    PropertyInt2Control.cpp
    PropertyInt4Control.cpp
    PropertyIntControl.cpp
    PropertyRegionTypeControl.cpp
    PropertySet.cpp
    PropertyTexturesControl.cpp
    RecentFilesManager.cpp
    RegionControl.cpp
    RegionItem.cpp
    RegionListControl.cpp
    RegionPropertyControl.cpp
    RegionTextureControl.cpp
    SelectorControl.cpp
    SeparatorControl.cpp
    SeparatorItem.cpp
    SeparatorListControl.cpp
    SeparatorPropertyControl.cpp
    SeparatorTextureControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsWindow.cpp
    SkinControl.cpp
    SkinItem.cpp
    SkinListControl.cpp
    SkinManager.cpp
    SkinPropertyControl.cpp
    SkinTextureControl.cpp
    StateControl.cpp
    StateItem.cpp
    StateListControl.cpp
    StateManager.cpp
    StatePropertyControl.cpp
    StateTextureControl.cpp
    TestState.cpp
    TestWindow.cpp
    TextFieldControl.cpp
    TextureBrowseCell.cpp
    TextureBrowseControl.cpp
    TextureBrowseItemBox.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    VerticalSelectorBlackControl.cpp
    VerticalSelectorControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
    ../../Common/Input/OIS/InputManager.cpp
    ../../Common/Input/OIS/PointerManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    ActionManager.h
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    Binary.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    EditorState.h
    ExportManager.h
    HorizontalSelectorBlackControl.h
    HorizontalSelectorControl.h
    HotKeyCommand.h
    HotKeyManager.h
    ItemHolder.h
    Localise.h
    MainMenuControl.h
    MainPane.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    PositionSelectorBlackControl.h
    PositionSelectorControl.h
    Property.h
    PropertyAdvisor.h
    PropertyAlignControl.h
    PropertyBoolControl.h
    PropertyColourControl.h
    PropertyControl.h
    PropertyInt2Control.h
    PropertyInt4Control.h
    PropertyIntControl.h
    PropertyRegionTypeControl.h
    PropertySet.h
    PropertyTexturesControl.h
    RecentFilesManager.h
    RegionControl.h
    RegionItem.h
    RegionListControl.h
    RegionPropertyControl.h
    RegionTextureControl.h
    SelectorControl.h
    SeparatorControl.h
    SeparatorItem.h
    SeparatorListControl.h
    SeparatorPropertyControl.h
    SeparatorTextureControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsWindow.h
    SkinControl.h
    SkinItem.h
    SkinListControl.h
    SkinManager.h
    SkinPropertyControl.h
    SkinTextureControl.h
    StateControl.h
    StateController.h
    StateItem.h
    StateListControl.h
    StateManager.h
    StatePropertyControl.h
    StateTextureControl.h
    TestState.h
    TestWindow.h
    TextFieldControl.h
    TextureBrowseCell.h
    TextureBrowseControl.h
    TextureBrowseItemBox.h
    TextureControl.h
    TextureToolControl.h
    VerticalSelectorBlackControl.h
    VerticalSelectorControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ActionManager.cpp
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    ExportManager.cpp
    HorizontalSelectorBlackControl.cpp
    HorizontalSelectorControl.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPane.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    PositionSelectorBlackControl.cpp
    PositionSelectorControl.cpp
    Property.cpp
    PropertyAlignControl.cpp
    PropertyBoolControl.cpp
    PropertyColourControl.cpp
    PropertyControl.cpp
    PropertyInt2Control.cpp
    PropertyInt4Control.cpp
    PropertyIntControl.cpp
    PropertyRegionTypeControl.cpp
    PropertySet.cpp
    PropertyTexturesControl.cpp
    RecentFilesManager.cpp
    RegionControl.cpp
    RegionItem.cpp
    RegionListControl.cpp
    RegionPropertyControl.cpp
    RegionTextureControl.cpp
    SelectorControl.cpp
    SeparatorControl.cpp
    SeparatorItem.cpp
    SeparatorListControl.cpp
    SeparatorPropertyControl.cpp
    SeparatorTextureControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsWindow.cpp
    SkinControl.cpp
    SkinItem.cpp
    SkinListControl.cpp
    SkinManager.cpp
    SkinPropertyControl.cpp
    SkinTextureControl.cpp
    StateControl.cpp
    StateItem.cpp
    StateListControl.cpp
    StateManager.cpp
    StatePropertyControl.cpp
    StateTextureControl.cpp
    TestState.cpp
    TestWindow.cpp
    TextFieldControl.cpp
    TextureBrowseCell.cpp
    TextureBrowseControl.cpp
    TextureBrowseItemBox.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    VerticalSelectorBlackControl.cpp
    VerticalSelectorControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_HEADER_FILES 
    ActionManager.h
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    Binary.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    EditorState.h
    ExportManager.h
    HorizontalSelectorBlackControl.h
    HorizontalSelectorControl.h
    HotKeyCommand.h
    HotKeyManager.h
    ItemHolder.h
    Localise.h
    MainMenuControl.h
    MainPane.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    PositionSelectorBlackControl.h
    PositionSelectorControl.h
    Property.h
    PropertyAdvisor.h
    PropertyAlignControl.h
    PropertyBoolControl.h
    PropertyColourControl.h
    PropertyControl.h
    PropertyInt2Control.h
    PropertyInt4Control.h
    PropertyIntControl.h
    PropertyRegionTypeControl.h
    PropertySet.h
    PropertyTexturesControl.h
    RecentFilesManager.h
    RegionControl.h
    RegionItem.h
    RegionListControl.h
    RegionPropertyControl.h
    RegionTextureControl.h
    SelectorControl.h
    SeparatorControl.h
    SeparatorItem.h
    SeparatorListControl.h
    SeparatorPropertyControl.h
    SeparatorTextureControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsWindow.h
    SkinControl.h
    SkinItem.h
    SkinListControl.h
    SkinManager.h
    SkinPropertyControl.h
    SkinTextureControl.h
    StateControl.h
    StateController.h
    StateItem.h
    StateListControl.h
    StateManager.h
    StatePropertyControl.h
    StateTextureControl.h
    TestState.h
    TestWindow.h
    TextFieldControl.h
    TextureBrowseCell.h
    TextureBrowseControl.h
    TextureBrowseItemBox.h
    TextureControl.h
    TextureToolControl.h
    VerticalSelectorBlackControl.h
    VerticalSelectorControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN64" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ActionManager.cpp
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    ExportManager.cpp
    HorizontalSelectorBlackControl.cpp
    HorizontalSelectorControl.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPane.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    PositionSelectorBlackControl.cpp
    PositionSelectorControl.cpp
    Property.cpp
    PropertyAlignControl.cpp
    PropertyBoolControl.cpp
    PropertyColourControl.cpp
    PropertyControl.cpp
    PropertyInt2Control.cpp
    PropertyInt4Control.cpp
    PropertyIntControl.cpp
    PropertyRegionTypeControl.cpp
    PropertySet.cpp
    PropertyTexturesControl.cpp
    RecentFilesManager.cpp
    RegionControl.cpp
    RegionItem.cpp
    RegionListControl.cpp
    RegionPropertyControl.cpp
    RegionTextureControl.cpp
    SelectorControl.cpp
    SeparatorControl.cpp
    SeparatorItem.cpp
    SeparatorListControl.cpp
    SeparatorPropertyControl.cpp
    SeparatorTextureControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsWindow.cpp
    SkinControl.cpp
    SkinItem.cpp
    SkinListControl.cpp
    SkinManager.cpp
    SkinPropertyControl.cpp
    SkinTextureControl.cpp
    StateControl.cpp
    StateItem.cpp
    StateListControl.cpp
    StateManager.cpp
    StatePropertyControl.cpp
    StateTextureControl.cpp
    TestState.cpp
    TestWindow.cpp
    TextFieldControl.cpp
    TextureBrowseCell.cpp
    TextureBrowseControl.cpp
    TextureBrowseItemBox.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    VerticalSelectorBlackControl.cpp
    VerticalSelectorControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )


if( LINUX )
  set( MODULE_NAME "MyGUI.SkinEditor" )
elseif( WIN32 )
  set( MODULE_NAME "MyGUI.SkinEditor" )
elseif( WIN64 )
  set( MODULE_NAME "MyGUI.SkinEditor" )
endif()
if( LINUX )
  add_executable( ${MODULE_NAME} ${ALL_FILES} )
elseif( WIN32 )
  add_executable( ${MODULE_NAME} WIN32 ${ALL_FILES} )
elseif( WIN64 )
  add_executable( ${MODULE_NAME} WIN32 ${ALL_FILES} )
endif()

if ( LINUX )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( LINUX )

if ( WIN32 )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( WIN32 )

if ( WIN64 )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( WIN64 )

include_directories( ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src/winfonts ../../Common/FileSystemInfo ../../MyGUIEngine/include ../../Platforms/OpenGL/OpenGLPlatform/include ../../Platforms/OpenGL/OpenGLPlatform/include/GL )

if ( LINUX )
  include_directories( ../SkinEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input ../../Common/Input/OIS )
endif( LINUX )

if ( WIN32 )
  include_directories( ../SkinEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input )
endif( WIN32 )

if ( WIN64 )
  include_directories( ../SkinEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (LINUX)
GUCEF_config_tool( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_tool( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_tool( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


