#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: MyGUI.LayoutEditor



if (LINUX)
  set( PLATFORM_HEADER_FILES 
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    BackwardCompatibilityManager.h
    CodeGenerator.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    Common.h
    CyclicBuffer.h
    EditorState.h
    EditorToolTip.h
    EditorWidgets.h
    GroupMessage.h
    HotKeyCommand.h
    HotKeyManager.h
    IPropertyField.h
    Localise.h
    MainMenuControl.h
    MainPaneControl.h
    MainWorkspaceControl.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    MyGUI_RTTLayer.h
    PanelControllers.h
    PanelExtensionProperties.h
    PanelItems.h
    PanelMainProperties.h
    PanelProperties.h
    PanelTemplateProperties.h
    PanelUserData.h
    PanelView.h
    PanelViewCell.h
    Parse.h
    PositionSelectorControl.h
    PossibleValue.h
    ProjectControl.h
    PropertiesPanelView.h
    PropertyFieldAlpha.h
    PropertyFieldColour.h
    PropertyFieldComboBox.h
    PropertyFieldEditBox.h
    PropertyFieldFileName.h
    PropertyFieldFont.h
    PropertyFieldManager.h
    PropertyFieldName.h
    PropertyFieldNumeric.h
    PropertyFieldPosition.h
    PropertyFieldSkin.h
    PropertyFieldType.h
    RecentFilesManager.h
    resource.h
    SelectorControl.h
    SeparatorPartControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsUpdateResourcesControl.h
    SettingsWidgetsControl.h
    SettingsWindow.h
    SkinInfo.h
    StateController.h
    StateManager.h
    TestState.h
    TextFieldControl.h
    TextureControl.h
    TextureToolControl.h
    ToolsControl.h
    UndoManager.h
    WidgetContainer.h
    WidgetCreatorManager.h
    WidgetSelectorManager.h
    WidgetStyle.h
    WidgetsWindow.h
    WidgetTypes.h
    WorkspaceControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
    ../../Common/Input/OIS/InputManager.h
    ../../Common/Input/OIS/PointerManager.h
  )

  set( PLATFORM_HEADER_INSTALL "LINUX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    BackwardCompatibilityManager.cpp
    CodeGenerator.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    EditorToolTip.cpp
    EditorWidgets.cpp
    GroupMessage.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPaneControl.cpp
    MainWorkspaceControl.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    MyGUI_RTTLayer.cpp
    PanelControllers.cpp
    PanelExtensionProperties.cpp
    PanelItems.cpp
    PanelMainProperties.cpp
    PanelProperties.cpp
    PanelTemplateProperties.cpp
    PanelUserData.cpp
    Parse.cpp
    PositionSelectorControl.cpp
    ProjectControl.cpp
    PropertiesPanelView.cpp
    PropertyFieldAlpha.cpp
    PropertyFieldColour.cpp
    PropertyFieldComboBox.cpp
    PropertyFieldEditBox.cpp
    PropertyFieldFileName.cpp
    PropertyFieldFont.cpp
    PropertyFieldManager.cpp
    PropertyFieldName.cpp
    PropertyFieldNumeric.cpp
    PropertyFieldPosition.cpp
    PropertyFieldSkin.cpp
    PropertyFieldType.cpp
    RecentFilesManager.cpp
    SelectorControl.cpp
    SeparatorPartControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsUpdateResourcesControl.cpp
    SettingsWidgetsControl.cpp
    SettingsWindow.cpp
    StateManager.cpp
    TestState.cpp
    TextFieldControl.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    ToolsControl.cpp
    UndoManager.cpp
    WidgetCreatorManager.cpp
    WidgetSelectorManager.cpp
    WidgetsWindow.cpp
    WidgetTypes.cpp
    WorkspaceControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
    ../../Common/Input/OIS/InputManager.cpp
    ../../Common/Input/OIS/PointerManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    BackwardCompatibilityManager.h
    CodeGenerator.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    Common.h
    CyclicBuffer.h
    EditorState.h
    EditorToolTip.h
    EditorWidgets.h
    GroupMessage.h
    HotKeyCommand.h
    HotKeyManager.h
    IPropertyField.h
    Localise.h
    MainMenuControl.h
    MainPaneControl.h
    MainWorkspaceControl.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    MyGUI_RTTLayer.h
    PanelControllers.h
    PanelExtensionProperties.h
    PanelItems.h
    PanelMainProperties.h
    PanelProperties.h
    PanelTemplateProperties.h
    PanelUserData.h
    PanelView.h
    PanelViewCell.h
    Parse.h
    PositionSelectorControl.h
    PossibleValue.h
    ProjectControl.h
    PropertiesPanelView.h
    PropertyFieldAlpha.h
    PropertyFieldColour.h
    PropertyFieldComboBox.h
    PropertyFieldEditBox.h
    PropertyFieldFileName.h
    PropertyFieldFont.h
    PropertyFieldManager.h
    PropertyFieldName.h
    PropertyFieldNumeric.h
    PropertyFieldPosition.h
    PropertyFieldSkin.h
    PropertyFieldType.h
    RecentFilesManager.h
    resource.h
    SelectorControl.h
    SeparatorPartControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsUpdateResourcesControl.h
    SettingsWidgetsControl.h
    SettingsWindow.h
    SkinInfo.h
    StateController.h
    StateManager.h
    TestState.h
    TextFieldControl.h
    TextureControl.h
    TextureToolControl.h
    ToolsControl.h
    UndoManager.h
    WidgetContainer.h
    WidgetCreatorManager.h
    WidgetSelectorManager.h
    WidgetStyle.h
    WidgetsWindow.h
    WidgetTypes.h
    WorkspaceControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    BackwardCompatibilityManager.cpp
    CodeGenerator.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    EditorToolTip.cpp
    EditorWidgets.cpp
    GroupMessage.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPaneControl.cpp
    MainWorkspaceControl.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    MyGUI_RTTLayer.cpp
    PanelControllers.cpp
    PanelExtensionProperties.cpp
    PanelItems.cpp
    PanelMainProperties.cpp
    PanelProperties.cpp
    PanelTemplateProperties.cpp
    PanelUserData.cpp
    Parse.cpp
    PositionSelectorControl.cpp
    ProjectControl.cpp
    PropertiesPanelView.cpp
    PropertyFieldAlpha.cpp
    PropertyFieldColour.cpp
    PropertyFieldComboBox.cpp
    PropertyFieldEditBox.cpp
    PropertyFieldFileName.cpp
    PropertyFieldFont.cpp
    PropertyFieldManager.cpp
    PropertyFieldName.cpp
    PropertyFieldNumeric.cpp
    PropertyFieldPosition.cpp
    PropertyFieldSkin.cpp
    PropertyFieldType.cpp
    RecentFilesManager.cpp
    SelectorControl.cpp
    SeparatorPartControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsUpdateResourcesControl.cpp
    SettingsWidgetsControl.cpp
    SettingsWindow.cpp
    StateManager.cpp
    TestState.cpp
    TextFieldControl.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    ToolsControl.cpp
    UndoManager.cpp
    WidgetCreatorManager.cpp
    WidgetSelectorManager.cpp
    WidgetsWindow.cpp
    WidgetTypes.cpp
    WorkspaceControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_HEADER_FILES 
    Application.h
    AreaSelectorControl.h
    BackgroundControl.h
    BackwardCompatibilityManager.h
    CodeGenerator.h
    ColourManager.h
    ColourPanel.h
    CommandManager.h
    Common.h
    CyclicBuffer.h
    EditorState.h
    EditorToolTip.h
    EditorWidgets.h
    GroupMessage.h
    HotKeyCommand.h
    HotKeyManager.h
    IPropertyField.h
    Localise.h
    MainMenuControl.h
    MainPaneControl.h
    MainWorkspaceControl.h
    MessageBoxFadeControl.h
    MessageBoxManager.h
    MyGUI_FilterNoneSkin.h
    MyGUI_RTTLayer.h
    PanelControllers.h
    PanelExtensionProperties.h
    PanelItems.h
    PanelMainProperties.h
    PanelProperties.h
    PanelTemplateProperties.h
    PanelUserData.h
    PanelView.h
    PanelViewCell.h
    Parse.h
    PositionSelectorControl.h
    PossibleValue.h
    ProjectControl.h
    PropertiesPanelView.h
    PropertyFieldAlpha.h
    PropertyFieldColour.h
    PropertyFieldComboBox.h
    PropertyFieldEditBox.h
    PropertyFieldFileName.h
    PropertyFieldFont.h
    PropertyFieldManager.h
    PropertyFieldName.h
    PropertyFieldNumeric.h
    PropertyFieldPosition.h
    PropertyFieldSkin.h
    PropertyFieldType.h
    RecentFilesManager.h
    resource.h
    SelectorControl.h
    SeparatorPartControl.h
    SettingsGeneralControl.h
    SettingsManager.h
    SettingsResourcePathsControl.h
    SettingsResourcesControl.h
    SettingsSector.h
    SettingsUpdateResourcesControl.h
    SettingsWidgetsControl.h
    SettingsWindow.h
    SkinInfo.h
    StateController.h
    StateManager.h
    TestState.h
    TextFieldControl.h
    TextureControl.h
    TextureToolControl.h
    ToolsControl.h
    UndoManager.h
    WidgetContainer.h
    WidgetCreatorManager.h
    WidgetSelectorManager.h
    WidgetStyle.h
    WidgetsWindow.h
    WidgetTypes.h
    WorkspaceControl.h
    ../../Common/Precompiled.h
    ../../Common/Base/InputFocusInfo.h
    ../../Common/Base/Main.h
    ../../Common/Base/StatisticInfo.h
    ../../Common/Base/OpenGL/BaseManager.h
    ../../Common/Input/InputConverter.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN64" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    Application.cpp
    AreaSelectorControl.cpp
    BackgroundControl.cpp
    BackwardCompatibilityManager.cpp
    CodeGenerator.cpp
    ColourManager.cpp
    ColourPanel.cpp
    CommandManager.cpp
    EditorState.cpp
    EditorToolTip.cpp
    EditorWidgets.cpp
    GroupMessage.cpp
    HotKeyManager.cpp
    MainMenuControl.cpp
    MainPaneControl.cpp
    MainWorkspaceControl.cpp
    MessageBoxFadeControl.cpp
    MessageBoxManager.cpp
    MyGUI_FilterNoneSkin.cpp
    MyGUI_RTTLayer.cpp
    PanelControllers.cpp
    PanelExtensionProperties.cpp
    PanelItems.cpp
    PanelMainProperties.cpp
    PanelProperties.cpp
    PanelTemplateProperties.cpp
    PanelUserData.cpp
    Parse.cpp
    PositionSelectorControl.cpp
    ProjectControl.cpp
    PropertiesPanelView.cpp
    PropertyFieldAlpha.cpp
    PropertyFieldColour.cpp
    PropertyFieldComboBox.cpp
    PropertyFieldEditBox.cpp
    PropertyFieldFileName.cpp
    PropertyFieldFont.cpp
    PropertyFieldManager.cpp
    PropertyFieldName.cpp
    PropertyFieldNumeric.cpp
    PropertyFieldPosition.cpp
    PropertyFieldSkin.cpp
    PropertyFieldType.cpp
    RecentFilesManager.cpp
    SelectorControl.cpp
    SeparatorPartControl.cpp
    SettingsGeneralControl.cpp
    SettingsManager.cpp
    SettingsResourcePathsControl.cpp
    SettingsResourcesControl.cpp
    SettingsSector.cpp
    SettingsUpdateResourcesControl.cpp
    SettingsWidgetsControl.cpp
    SettingsWindow.cpp
    StateManager.cpp
    TestState.cpp
    TextFieldControl.cpp
    TextureControl.cpp
    TextureToolControl.cpp
    ToolsControl.cpp
    UndoManager.cpp
    WidgetCreatorManager.cpp
    WidgetSelectorManager.cpp
    WidgetsWindow.cpp
    WidgetTypes.cpp
    WorkspaceControl.cpp
    ../../Common/Precompiled.cpp
    ../../Common/Base/OpenGL/BaseManager.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )


if( LINUX )
  set( MODULE_NAME "MyGUI.LayoutEditor" )
elseif( WIN32 )
  set( MODULE_NAME "MyGUI.LayoutEditor" )
elseif( WIN64 )
  set( MODULE_NAME "MyGUI.LayoutEditor" )
endif()
if( LINUX )
  add_executable( ${MODULE_NAME} ${ALL_FILES} )
elseif( WIN32 )
  add_executable( ${MODULE_NAME} WIN32 ${ALL_FILES} )
elseif( WIN64 )
  add_executable( ${MODULE_NAME} WIN32 ${ALL_FILES} )
endif()

if ( LINUX )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( LINUX )

if ( WIN32 )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( WIN32 )

if ( WIN64 )
  add_dependencies( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  target_link_libraries( ${MODULE_NAME} MyGUI.Engine MyGUI.OpenGLPlatform freetype )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE" )
endif( WIN64 )

include_directories( ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src/winfonts ../../Common/FileSystemInfo ../../MyGUIEngine/include ../../Platforms/OpenGL/OpenGLPlatform/include ../../Platforms/OpenGL/OpenGLPlatform/include/GL )

if ( LINUX )
  include_directories( ../LayoutEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input ../../Common/Input/OIS )
endif( LINUX )

if ( WIN32 )
  include_directories( ../LayoutEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input )
endif( WIN32 )

if ( WIN64 )
  include_directories( ../LayoutEditor ../../Common ../../Common/Base ../../Common/Base/OpenGL ../../Common/Input )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (LINUX)
GUCEF_config_tool( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_tool( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_tool( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


