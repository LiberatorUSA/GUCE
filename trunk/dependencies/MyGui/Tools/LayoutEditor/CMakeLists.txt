#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: MyGUILayoutEditor

set( HEADER_FILES 
  Application.h
  AreaSelectorControl.h
  BackgroundControl.h
  BackwardCompatibilityManager.h
  CodeGenerator.h
  ColourManager.h
  ColourPanel.h
  CommandManager.h
  Common.h
  CyclicBuffer.h
  EditorState.h
  EditorToolTip.h
  EditorWidgets.h
  GroupMessage.h
  HotKeyCommand.h
  HotKeyManager.h
  IPropertyField.h
  Localise.h
  MainMenuControl.h
  MainPaneControl.h
  MainWorkspaceControl.h
  MessageBoxFadeControl.h
  MessageBoxManager.h
  MyGUI_FilterNoneSkin.h
  MyGUI_RTTLayer.h
  PanelControllers.h
  PanelExtensionProperties.h
  PanelItems.h
  PanelMainProperties.h
  PanelProperties.h
  PanelTemplateProperties.h
  PanelUserData.h
  PanelView.h
  PanelViewCell.h
  Parse.h
  PositionSelectorControl.h
  PossibleValue.h
  ProjectControl.h
  PropertiesPanelView.h
  PropertyFieldAlpha.h
  PropertyFieldColour.h
  PropertyFieldComboBox.h
  PropertyFieldEditBox.h
  PropertyFieldFileName.h
  PropertyFieldFont.h
  PropertyFieldManager.h
  PropertyFieldName.h
  PropertyFieldNumeric.h
  PropertyFieldPosition.h
  PropertyFieldSkin.h
  PropertyFieldType.h
  RecentFilesManager.h
  resource.h
  SelectorControl.h
  SeparatorPartControl.h
  SettingsGeneralControl.h
  SettingsManager.h
  SettingsResourcePathsControl.h
  SettingsResourcesControl.h
  SettingsSector.h
  SettingsUpdateResourcesControl.h
  SettingsWidgetsControl.h
  SettingsWindow.h
  SkinInfo.h
  StateController.h
  StateManager.h
  TestState.h
  TextFieldControl.h
  TextureControl.h
  TextureToolControl.h
  ToolsControl.h
  UndoManager.h
  WidgetContainer.h
  WidgetCreatorManager.h
  WidgetSelectorManager.h
  WidgetStyle.h
  WidgetsWindow.h
  WidgetTypes.h
  WorkspaceControl.h
)

set( SOURCE_FILES 
  Application.cpp
  AreaSelectorControl.cpp
  BackgroundControl.cpp
  BackwardCompatibilityManager.cpp
  CodeGenerator.cpp
  ColourManager.cpp
  ColourPanel.cpp
  CommandManager.cpp
  EditorState.cpp
  EditorToolTip.cpp
  EditorWidgets.cpp
  GroupMessage.cpp
  HotKeyManager.cpp
  MainMenuControl.cpp
  MainPaneControl.cpp
  MainWorkspaceControl.cpp
  MessageBoxFadeControl.cpp
  MessageBoxManager.cpp
  MyGUI_FilterNoneSkin.cpp
  MyGUI_RTTLayer.cpp
  PanelControllers.cpp
  PanelExtensionProperties.cpp
  PanelItems.cpp
  PanelMainProperties.cpp
  PanelProperties.cpp
  PanelTemplateProperties.cpp
  PanelUserData.cpp
  Parse.cpp
  PositionSelectorControl.cpp
  ProjectControl.cpp
  PropertiesPanelView.cpp
  PropertyFieldAlpha.cpp
  PropertyFieldColour.cpp
  PropertyFieldComboBox.cpp
  PropertyFieldEditBox.cpp
  PropertyFieldFileName.cpp
  PropertyFieldFont.cpp
  PropertyFieldManager.cpp
  PropertyFieldName.cpp
  PropertyFieldNumeric.cpp
  PropertyFieldPosition.cpp
  PropertyFieldSkin.cpp
  PropertyFieldType.cpp
  RecentFilesManager.cpp
  SelectorControl.cpp
  SeparatorPartControl.cpp
  SettingsGeneralControl.cpp
  SettingsManager.cpp
  SettingsResourcePathsControl.cpp
  SettingsResourcesControl.cpp
  SettingsSector.cpp
  SettingsUpdateResourcesControl.cpp
  SettingsWidgetsControl.cpp
  SettingsWindow.cpp
  StateManager.cpp
  TestState.cpp
  TextFieldControl.cpp
  TextureControl.cpp
  TextureToolControl.cpp
  ToolsControl.cpp
  UndoManager.cpp
  WidgetCreatorManager.cpp
  WidgetSelectorManager.cpp
  WidgetsWindow.cpp
  WidgetTypes.cpp
  WorkspaceControl.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )




#******** END OF AUTOGENERATED CONTENT ********


if (WIN32)
  add_executable( MyGUILayoutEditor WIN32 ${ALL_FILES} )
else()
  add_executable( MyGUILayoutEditor ${ALL_FILES} )
endif()
add_dependencies( MyGUILayoutEditor MyGUIEngine MyGUI.Common freetype )
target_link_libraries( MyGUILayoutEditor MyGUIEngine MyGUI.Common freetype )
set_target_properties( MyGUILayoutEditor PROPERTIES COMPILE_DEFINITIONS "MYGUI_USE_FREETYPE")
GUCE_config_lib( MyGUILayoutEditor )


#******** START OF AUTOGENERATED CONTENT ********



include_directories( ../../../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zziplib ../../../../../../GUCEF/trunk/gucefVFS/plugins/vfspluginZIP/dependencies/zziplib/zzip ../../../Ogre/OgreMain/include ../../../Ogre/OgreMain/src ../../../Ogre/OgreMain/src/nedmalloc ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src/winfonts ../../Common ../../Common/Base ../../Common/Base/DirectX ../../Common/Base/Ogre ../../Common/Base/OpenGL ../../Common/BaseLayout ../../Common/FileSystemInfo ../../Common/Input ../../Common/Input/OIS ../../Common/Input/Win32_OIS ../../Common/ItemBox ../../Common/MessageBox ../../Common/Ogre/RenderBox ../../Common/PanelView ../../Common/Tools ../../MyGUIEngine/include )

if ( WIN32 )
  include_directories( ../../../../../../GUCEF/trunk/gucefINPUT/plugins/inputdriverOIS/dependency/OIS/includes ../../../../../../GUCEF/trunk/gucefINPUT/plugins/inputdriverOIS/dependency/OIS/includes/win32 ../../../../../../GUCEF/trunk/gucefINPUT/plugins/inputdriverOIS/dependency/OIS/src/extras/LIRC ../../../Ogre/OgreMain/include/WIN32 ../../../Ogre/OgreMain/src/WIN32 ../../Common/Input/Win32 )
endif( WIN32 )
